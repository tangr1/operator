package misc

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-swagger/go-swagger/client"
	"github.com/go-swagger/go-swagger/httpkit"
	"github.com/go-swagger/go-swagger/strfmt"

	"github.com/tangr1/hicto/models"
)

type DeleteInvitecodesIDReader struct {
	formats strfmt.Registry
}

func (o *DeleteInvitecodesIDReader) ReadResponse(response client.Response, consumer httpkit.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeleteInvitecodesIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewDeleteInvitecodesIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewDeleteInvitecodesIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewDeleteInvitecodesIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeleteInvitecodesIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewDeleteInvitecodesIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteInvitecodesIDOK creates a DeleteInvitecodesIDOK with default headers values
func NewDeleteInvitecodesIDOK() *DeleteInvitecodesIDOK {
	return &DeleteInvitecodesIDOK{}
}

/*DeleteInvitecodesIDOK

成功删除邀请码
*/
type DeleteInvitecodesIDOK struct {
	Payload *models.InviteCode
}

func (o *DeleteInvitecodesIDOK) Error() string {
	return fmt.Sprintf("[DELETE /invitecodes/{id}/][%d] deleteInvitecodesIdOK  %+v", 200, o.Payload)
}

func (o *DeleteInvitecodesIDOK) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InviteCode)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil {
		return err
	}

	return nil
}

// NewDeleteInvitecodesIDBadRequest creates a DeleteInvitecodesIDBadRequest with default headers values
func NewDeleteInvitecodesIDBadRequest() *DeleteInvitecodesIDBadRequest {
	return &DeleteInvitecodesIDBadRequest{}
}

/*DeleteInvitecodesIDBadRequest

无效请求
*/
type DeleteInvitecodesIDBadRequest struct {
	Payload *models.Error
}

func (o *DeleteInvitecodesIDBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /invitecodes/{id}/][%d] deleteInvitecodesIdBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteInvitecodesIDBadRequest) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil {
		return err
	}

	return nil
}

// NewDeleteInvitecodesIDUnauthorized creates a DeleteInvitecodesIDUnauthorized with default headers values
func NewDeleteInvitecodesIDUnauthorized() *DeleteInvitecodesIDUnauthorized {
	return &DeleteInvitecodesIDUnauthorized{}
}

/*DeleteInvitecodesIDUnauthorized

未认证
*/
type DeleteInvitecodesIDUnauthorized struct {
	Payload *models.Error
}

func (o *DeleteInvitecodesIDUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /invitecodes/{id}/][%d] deleteInvitecodesIdUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteInvitecodesIDUnauthorized) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil {
		return err
	}

	return nil
}

// NewDeleteInvitecodesIDForbidden creates a DeleteInvitecodesIDForbidden with default headers values
func NewDeleteInvitecodesIDForbidden() *DeleteInvitecodesIDForbidden {
	return &DeleteInvitecodesIDForbidden{}
}

/*DeleteInvitecodesIDForbidden

无访问权限
*/
type DeleteInvitecodesIDForbidden struct {
	Payload *models.Error
}

func (o *DeleteInvitecodesIDForbidden) Error() string {
	return fmt.Sprintf("[DELETE /invitecodes/{id}/][%d] deleteInvitecodesIdForbidden  %+v", 403, o.Payload)
}

func (o *DeleteInvitecodesIDForbidden) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil {
		return err
	}

	return nil
}

// NewDeleteInvitecodesIDNotFound creates a DeleteInvitecodesIDNotFound with default headers values
func NewDeleteInvitecodesIDNotFound() *DeleteInvitecodesIDNotFound {
	return &DeleteInvitecodesIDNotFound{}
}

/*DeleteInvitecodesIDNotFound

没找到指定对象
*/
type DeleteInvitecodesIDNotFound struct {
	Payload *models.Error
}

func (o *DeleteInvitecodesIDNotFound) Error() string {
	return fmt.Sprintf("[DELETE /invitecodes/{id}/][%d] deleteInvitecodesIdNotFound  %+v", 404, o.Payload)
}

func (o *DeleteInvitecodesIDNotFound) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil {
		return err
	}

	return nil
}

// NewDeleteInvitecodesIDInternalServerError creates a DeleteInvitecodesIDInternalServerError with default headers values
func NewDeleteInvitecodesIDInternalServerError() *DeleteInvitecodesIDInternalServerError {
	return &DeleteInvitecodesIDInternalServerError{}
}

/*DeleteInvitecodesIDInternalServerError

服务端内部错误
*/
type DeleteInvitecodesIDInternalServerError struct {
	Payload *models.Error
}

func (o *DeleteInvitecodesIDInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /invitecodes/{id}/][%d] deleteInvitecodesIdInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteInvitecodesIDInternalServerError) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil {
		return err
	}

	return nil
}
