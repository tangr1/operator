package expert

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-swagger/go-swagger/client"
	"github.com/go-swagger/go-swagger/httpkit"
	"github.com/go-swagger/go-swagger/strfmt"

	"github.com/tangr1/hicto/models"
)

type PutExpertsIDReader struct {
	formats strfmt.Registry
}

func (o *PutExpertsIDReader) ReadResponse(response client.Response, consumer httpkit.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPutExpertsIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPutExpertsIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPutExpertsIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewPutExpertsIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPutExpertsIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewPutExpertsIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutExpertsIDOK creates a PutExpertsIDOK with default headers values
func NewPutExpertsIDOK() *PutExpertsIDOK {
	return &PutExpertsIDOK{}
}

/*PutExpertsIDOK

成功更新专家
*/
type PutExpertsIDOK struct {
	Payload *models.Expert
}

func (o *PutExpertsIDOK) Error() string {
	return fmt.Sprintf("[PUT /experts/{id}/][%d] putExpertsIdOK  %+v", 200, o.Payload)
}

func (o *PutExpertsIDOK) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Expert)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil {
		return err
	}

	return nil
}

// NewPutExpertsIDBadRequest creates a PutExpertsIDBadRequest with default headers values
func NewPutExpertsIDBadRequest() *PutExpertsIDBadRequest {
	return &PutExpertsIDBadRequest{}
}

/*PutExpertsIDBadRequest

无效请求
*/
type PutExpertsIDBadRequest struct {
	Payload *models.Error
}

func (o *PutExpertsIDBadRequest) Error() string {
	return fmt.Sprintf("[PUT /experts/{id}/][%d] putExpertsIdBadRequest  %+v", 400, o.Payload)
}

func (o *PutExpertsIDBadRequest) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil {
		return err
	}

	return nil
}

// NewPutExpertsIDUnauthorized creates a PutExpertsIDUnauthorized with default headers values
func NewPutExpertsIDUnauthorized() *PutExpertsIDUnauthorized {
	return &PutExpertsIDUnauthorized{}
}

/*PutExpertsIDUnauthorized

未认证
*/
type PutExpertsIDUnauthorized struct {
	Payload *models.Error
}

func (o *PutExpertsIDUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /experts/{id}/][%d] putExpertsIdUnauthorized  %+v", 401, o.Payload)
}

func (o *PutExpertsIDUnauthorized) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil {
		return err
	}

	return nil
}

// NewPutExpertsIDForbidden creates a PutExpertsIDForbidden with default headers values
func NewPutExpertsIDForbidden() *PutExpertsIDForbidden {
	return &PutExpertsIDForbidden{}
}

/*PutExpertsIDForbidden

无访问权限
*/
type PutExpertsIDForbidden struct {
	Payload *models.Error
}

func (o *PutExpertsIDForbidden) Error() string {
	return fmt.Sprintf("[PUT /experts/{id}/][%d] putExpertsIdForbidden  %+v", 403, o.Payload)
}

func (o *PutExpertsIDForbidden) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil {
		return err
	}

	return nil
}

// NewPutExpertsIDNotFound creates a PutExpertsIDNotFound with default headers values
func NewPutExpertsIDNotFound() *PutExpertsIDNotFound {
	return &PutExpertsIDNotFound{}
}

/*PutExpertsIDNotFound

没找到指定对象
*/
type PutExpertsIDNotFound struct {
	Payload *models.Error
}

func (o *PutExpertsIDNotFound) Error() string {
	return fmt.Sprintf("[PUT /experts/{id}/][%d] putExpertsIdNotFound  %+v", 404, o.Payload)
}

func (o *PutExpertsIDNotFound) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil {
		return err
	}

	return nil
}

// NewPutExpertsIDInternalServerError creates a PutExpertsIDInternalServerError with default headers values
func NewPutExpertsIDInternalServerError() *PutExpertsIDInternalServerError {
	return &PutExpertsIDInternalServerError{}
}

/*PutExpertsIDInternalServerError

服务端内部错误
*/
type PutExpertsIDInternalServerError struct {
	Payload *models.Error
}

func (o *PutExpertsIDInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /experts/{id}/][%d] putExpertsIdInternalServerError  %+v", 500, o.Payload)
}

func (o *PutExpertsIDInternalServerError) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil {
		return err
	}

	return nil
}
