package security

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-swagger/go-swagger/client"
	"github.com/go-swagger/go-swagger/httpkit"
	"github.com/go-swagger/go-swagger/strfmt"

	"github.com/tangr1/hicto/models"
)

type PostAuthLoginReader struct {
	formats strfmt.Registry
}

func (o *PostAuthLoginReader) ReadResponse(response client.Response, consumer httpkit.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPostAuthLoginOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPostAuthLoginBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPostAuthLoginUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostAuthLoginOK creates a PostAuthLoginOK with default headers values
func NewPostAuthLoginOK() *PostAuthLoginOK {
	return &PostAuthLoginOK{}
}

/*PostAuthLoginOK

成功获取token
*/
type PostAuthLoginOK struct {
	Payload *models.AuthenticationResponse
}

func (o *PostAuthLoginOK) Error() string {
	return fmt.Sprintf("[POST /auth/login/][%d] postAuthLoginOK  %+v", 200, o.Payload)
}

func (o *PostAuthLoginOK) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuthenticationResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil {
		return err
	}

	return nil
}

// NewPostAuthLoginBadRequest creates a PostAuthLoginBadRequest with default headers values
func NewPostAuthLoginBadRequest() *PostAuthLoginBadRequest {
	return &PostAuthLoginBadRequest{}
}

/*PostAuthLoginBadRequest

请求无效
*/
type PostAuthLoginBadRequest struct {
	Payload *models.Error
}

func (o *PostAuthLoginBadRequest) Error() string {
	return fmt.Sprintf("[POST /auth/login/][%d] postAuthLoginBadRequest  %+v", 400, o.Payload)
}

func (o *PostAuthLoginBadRequest) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil {
		return err
	}

	return nil
}

// NewPostAuthLoginUnauthorized creates a PostAuthLoginUnauthorized with default headers values
func NewPostAuthLoginUnauthorized() *PostAuthLoginUnauthorized {
	return &PostAuthLoginUnauthorized{}
}

/*PostAuthLoginUnauthorized

用户名或密码有问题
*/
type PostAuthLoginUnauthorized struct {
	Payload *models.Error
}

func (o *PostAuthLoginUnauthorized) Error() string {
	return fmt.Sprintf("[POST /auth/login/][%d] postAuthLoginUnauthorized  %+v", 401, o.Payload)
}

func (o *PostAuthLoginUnauthorized) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil {
		return err
	}

	return nil
}
