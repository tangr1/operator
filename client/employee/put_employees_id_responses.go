package employee

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-swagger/go-swagger/client"
	"github.com/go-swagger/go-swagger/httpkit"
	"github.com/go-swagger/go-swagger/strfmt"

	"github.com/tangr1/hicto/models"
)

type PutEmployeesIDReader struct {
	formats strfmt.Registry
}

func (o *PutEmployeesIDReader) ReadResponse(response client.Response, consumer httpkit.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPutEmployeesIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPutEmployeesIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPutEmployeesIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewPutEmployeesIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPutEmployeesIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewPutEmployeesIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutEmployeesIDOK creates a PutEmployeesIDOK with default headers values
func NewPutEmployeesIDOK() *PutEmployeesIDOK {
	return &PutEmployeesIDOK{}
}

/*PutEmployeesIDOK

成功更新创业公司员工
*/
type PutEmployeesIDOK struct {
	Payload *models.Employee
}

func (o *PutEmployeesIDOK) Error() string {
	return fmt.Sprintf("[PUT /employees/{id}/][%d] putEmployeesIdOK  %+v", 200, o.Payload)
}

func (o *PutEmployeesIDOK) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Employee)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil {
		return err
	}

	return nil
}

// NewPutEmployeesIDBadRequest creates a PutEmployeesIDBadRequest with default headers values
func NewPutEmployeesIDBadRequest() *PutEmployeesIDBadRequest {
	return &PutEmployeesIDBadRequest{}
}

/*PutEmployeesIDBadRequest

无效请求
*/
type PutEmployeesIDBadRequest struct {
	Payload *models.Error
}

func (o *PutEmployeesIDBadRequest) Error() string {
	return fmt.Sprintf("[PUT /employees/{id}/][%d] putEmployeesIdBadRequest  %+v", 400, o.Payload)
}

func (o *PutEmployeesIDBadRequest) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil {
		return err
	}

	return nil
}

// NewPutEmployeesIDUnauthorized creates a PutEmployeesIDUnauthorized with default headers values
func NewPutEmployeesIDUnauthorized() *PutEmployeesIDUnauthorized {
	return &PutEmployeesIDUnauthorized{}
}

/*PutEmployeesIDUnauthorized

未认证
*/
type PutEmployeesIDUnauthorized struct {
	Payload *models.Error
}

func (o *PutEmployeesIDUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /employees/{id}/][%d] putEmployeesIdUnauthorized  %+v", 401, o.Payload)
}

func (o *PutEmployeesIDUnauthorized) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil {
		return err
	}

	return nil
}

// NewPutEmployeesIDForbidden creates a PutEmployeesIDForbidden with default headers values
func NewPutEmployeesIDForbidden() *PutEmployeesIDForbidden {
	return &PutEmployeesIDForbidden{}
}

/*PutEmployeesIDForbidden

无访问权限
*/
type PutEmployeesIDForbidden struct {
	Payload *models.Error
}

func (o *PutEmployeesIDForbidden) Error() string {
	return fmt.Sprintf("[PUT /employees/{id}/][%d] putEmployeesIdForbidden  %+v", 403, o.Payload)
}

func (o *PutEmployeesIDForbidden) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil {
		return err
	}

	return nil
}

// NewPutEmployeesIDNotFound creates a PutEmployeesIDNotFound with default headers values
func NewPutEmployeesIDNotFound() *PutEmployeesIDNotFound {
	return &PutEmployeesIDNotFound{}
}

/*PutEmployeesIDNotFound

没找到指定对象
*/
type PutEmployeesIDNotFound struct {
	Payload *models.Error
}

func (o *PutEmployeesIDNotFound) Error() string {
	return fmt.Sprintf("[PUT /employees/{id}/][%d] putEmployeesIdNotFound  %+v", 404, o.Payload)
}

func (o *PutEmployeesIDNotFound) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil {
		return err
	}

	return nil
}

// NewPutEmployeesIDInternalServerError creates a PutEmployeesIDInternalServerError with default headers values
func NewPutEmployeesIDInternalServerError() *PutEmployeesIDInternalServerError {
	return &PutEmployeesIDInternalServerError{}
}

/*PutEmployeesIDInternalServerError

服务端内部错误
*/
type PutEmployeesIDInternalServerError struct {
	Payload *models.Error
}

func (o *PutEmployeesIDInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /employees/{id}/][%d] putEmployeesIdInternalServerError  %+v", 500, o.Payload)
}

func (o *PutEmployeesIDInternalServerError) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil {
		return err
	}

	return nil
}
