package comment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-swagger/go-swagger/client"
	"github.com/go-swagger/go-swagger/httpkit"
	"github.com/go-swagger/go-swagger/strfmt"

	"github.com/tangr1/hicto/models"
)

type PostCommentsReader struct {
	formats strfmt.Registry
}

func (o *PostCommentsReader) ReadResponse(response client.Response, consumer httpkit.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewPostCommentsCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPostCommentsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPostCommentsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewPostCommentsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewPostCommentsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostCommentsCreated creates a PostCommentsCreated with default headers values
func NewPostCommentsCreated() *PostCommentsCreated {
	return &PostCommentsCreated{}
}

/*PostCommentsCreated

成功创建评论
*/
type PostCommentsCreated struct {
	Payload *models.Comment
}

func (o *PostCommentsCreated) Error() string {
	return fmt.Sprintf("[POST /comments/][%d] postCommentsCreated  %+v", 201, o.Payload)
}

func (o *PostCommentsCreated) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Comment)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil {
		return err
	}

	return nil
}

// NewPostCommentsBadRequest creates a PostCommentsBadRequest with default headers values
func NewPostCommentsBadRequest() *PostCommentsBadRequest {
	return &PostCommentsBadRequest{}
}

/*PostCommentsBadRequest

无效请求
*/
type PostCommentsBadRequest struct {
	Payload *models.Error
}

func (o *PostCommentsBadRequest) Error() string {
	return fmt.Sprintf("[POST /comments/][%d] postCommentsBadRequest  %+v", 400, o.Payload)
}

func (o *PostCommentsBadRequest) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil {
		return err
	}

	return nil
}

// NewPostCommentsUnauthorized creates a PostCommentsUnauthorized with default headers values
func NewPostCommentsUnauthorized() *PostCommentsUnauthorized {
	return &PostCommentsUnauthorized{}
}

/*PostCommentsUnauthorized

未认证
*/
type PostCommentsUnauthorized struct {
	Payload *models.Error
}

func (o *PostCommentsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /comments/][%d] postCommentsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostCommentsUnauthorized) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil {
		return err
	}

	return nil
}

// NewPostCommentsForbidden creates a PostCommentsForbidden with default headers values
func NewPostCommentsForbidden() *PostCommentsForbidden {
	return &PostCommentsForbidden{}
}

/*PostCommentsForbidden

无访问权限
*/
type PostCommentsForbidden struct {
	Payload *models.Error
}

func (o *PostCommentsForbidden) Error() string {
	return fmt.Sprintf("[POST /comments/][%d] postCommentsForbidden  %+v", 403, o.Payload)
}

func (o *PostCommentsForbidden) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil {
		return err
	}

	return nil
}

// NewPostCommentsInternalServerError creates a PostCommentsInternalServerError with default headers values
func NewPostCommentsInternalServerError() *PostCommentsInternalServerError {
	return &PostCommentsInternalServerError{}
}

/*PostCommentsInternalServerError

服务端内部错误
*/
type PostCommentsInternalServerError struct {
	Payload *models.Error
}

func (o *PostCommentsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /comments/][%d] postCommentsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostCommentsInternalServerError) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil {
		return err
	}

	return nil
}
