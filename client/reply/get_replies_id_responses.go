package reply

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-swagger/go-swagger/client"
	"github.com/go-swagger/go-swagger/httpkit"
	"github.com/go-swagger/go-swagger/strfmt"

	"github.com/tangr1/hicto/models"
)

type GetRepliesIDReader struct {
	formats strfmt.Registry
}

func (o *GetRepliesIDReader) ReadResponse(response client.Response, consumer httpkit.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetRepliesIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetRepliesIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetRepliesIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetRepliesIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetRepliesIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetRepliesIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetRepliesIDOK creates a GetRepliesIDOK with default headers values
func NewGetRepliesIDOK() *GetRepliesIDOK {
	return &GetRepliesIDOK{}
}

/*GetRepliesIDOK

成功查询回复
*/
type GetRepliesIDOK struct {
	Payload *models.Reply
}

func (o *GetRepliesIDOK) Error() string {
	return fmt.Sprintf("[GET /replies/{id}/][%d] getRepliesIdOK  %+v", 200, o.Payload)
}

func (o *GetRepliesIDOK) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Reply)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil {
		return err
	}

	return nil
}

// NewGetRepliesIDBadRequest creates a GetRepliesIDBadRequest with default headers values
func NewGetRepliesIDBadRequest() *GetRepliesIDBadRequest {
	return &GetRepliesIDBadRequest{}
}

/*GetRepliesIDBadRequest

无效请求
*/
type GetRepliesIDBadRequest struct {
	Payload *models.Error
}

func (o *GetRepliesIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /replies/{id}/][%d] getRepliesIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetRepliesIDBadRequest) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil {
		return err
	}

	return nil
}

// NewGetRepliesIDUnauthorized creates a GetRepliesIDUnauthorized with default headers values
func NewGetRepliesIDUnauthorized() *GetRepliesIDUnauthorized {
	return &GetRepliesIDUnauthorized{}
}

/*GetRepliesIDUnauthorized

未认证
*/
type GetRepliesIDUnauthorized struct {
	Payload *models.Error
}

func (o *GetRepliesIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /replies/{id}/][%d] getRepliesIdUnauthorized  %+v", 401, o.Payload)
}

func (o *GetRepliesIDUnauthorized) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil {
		return err
	}

	return nil
}

// NewGetRepliesIDForbidden creates a GetRepliesIDForbidden with default headers values
func NewGetRepliesIDForbidden() *GetRepliesIDForbidden {
	return &GetRepliesIDForbidden{}
}

/*GetRepliesIDForbidden

无访问权限
*/
type GetRepliesIDForbidden struct {
	Payload *models.Error
}

func (o *GetRepliesIDForbidden) Error() string {
	return fmt.Sprintf("[GET /replies/{id}/][%d] getRepliesIdForbidden  %+v", 403, o.Payload)
}

func (o *GetRepliesIDForbidden) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil {
		return err
	}

	return nil
}

// NewGetRepliesIDNotFound creates a GetRepliesIDNotFound with default headers values
func NewGetRepliesIDNotFound() *GetRepliesIDNotFound {
	return &GetRepliesIDNotFound{}
}

/*GetRepliesIDNotFound

没找到指定对象
*/
type GetRepliesIDNotFound struct {
	Payload *models.Error
}

func (o *GetRepliesIDNotFound) Error() string {
	return fmt.Sprintf("[GET /replies/{id}/][%d] getRepliesIdNotFound  %+v", 404, o.Payload)
}

func (o *GetRepliesIDNotFound) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil {
		return err
	}

	return nil
}

// NewGetRepliesIDInternalServerError creates a GetRepliesIDInternalServerError with default headers values
func NewGetRepliesIDInternalServerError() *GetRepliesIDInternalServerError {
	return &GetRepliesIDInternalServerError{}
}

/*GetRepliesIDInternalServerError

服务端内部错误
*/
type GetRepliesIDInternalServerError struct {
	Payload *models.Error
}

func (o *GetRepliesIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /replies/{id}/][%d] getRepliesIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetRepliesIDInternalServerError) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil {
		return err
	}

	return nil
}
