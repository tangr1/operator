package reply

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-swagger/go-swagger/client"
	"github.com/go-swagger/go-swagger/errors"
	"github.com/go-swagger/go-swagger/strfmt"
	"github.com/go-swagger/go-swagger/swag"
)

// NewGetRepliesParams creates a new GetRepliesParams object
// with the default values initialized.
func NewGetRepliesParams() *GetRepliesParams {
	return &GetRepliesParams{}
}

/*GetRepliesParams contains all the parameters to send to the API endpoint
for the get replies operation typically these are written to a http.Request
*/
type GetRepliesParams struct {

	/*Authorid
	  回复发布者ID

	*/
	Authorid int64
	/*Onlyaccepted
	  是否只显示被采纳的答案

	*/
	Onlyaccepted bool
	/*Page
	  当前页码

	*/
	Page int64
	/*Pagesize
	  每页项数

	*/
	Pagesize int64
	/*Startup
	  是否为企业员工

	*/
	Startup bool
	/*Topicid
	  回复的主题ID

	*/
	Topicid int64
}

// WithAuthorid adds the authorid to the get replies params
func (o *GetRepliesParams) WithAuthorid(authorid int64) *GetRepliesParams {
	o.Authorid = authorid
	return o
}

// WithOnlyaccepted adds the onlyaccepted to the get replies params
func (o *GetRepliesParams) WithOnlyaccepted(onlyaccepted bool) *GetRepliesParams {
	o.Onlyaccepted = onlyaccepted
	return o
}

// WithPage adds the page to the get replies params
func (o *GetRepliesParams) WithPage(page int64) *GetRepliesParams {
	o.Page = page
	return o
}

// WithPagesize adds the pagesize to the get replies params
func (o *GetRepliesParams) WithPagesize(pagesize int64) *GetRepliesParams {
	o.Pagesize = pagesize
	return o
}

// WithStartup adds the startup to the get replies params
func (o *GetRepliesParams) WithStartup(startup bool) *GetRepliesParams {
	o.Startup = startup
	return o
}

// WithTopicid adds the topicid to the get replies params
func (o *GetRepliesParams) WithTopicid(topicid int64) *GetRepliesParams {
	o.Topicid = topicid
	return o
}

// WriteToRequest writes these params to a swagger request
func (o *GetRepliesParams) WriteToRequest(r client.Request, reg strfmt.Registry) error {

	var res []error

	// path param authorid
	if err := r.SetPathParam("authorid", swag.FormatInt64(o.Authorid)); err != nil {
		return err
	}

	// path param onlyaccepted
	if err := r.SetPathParam("onlyaccepted", swag.FormatBool(o.Onlyaccepted)); err != nil {
		return err
	}

	// path param page
	if err := r.SetPathParam("page", swag.FormatInt64(o.Page)); err != nil {
		return err
	}

	// path param pagesize
	if err := r.SetPathParam("pagesize", swag.FormatInt64(o.Pagesize)); err != nil {
		return err
	}

	// path param startup
	if err := r.SetPathParam("startup", swag.FormatBool(o.Startup)); err != nil {
		return err
	}

	// path param topicid
	if err := r.SetPathParam("topicid", swag.FormatInt64(o.Topicid)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
