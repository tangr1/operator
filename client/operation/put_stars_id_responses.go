package operation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-swagger/go-swagger/client"
	"github.com/go-swagger/go-swagger/httpkit"
	"github.com/go-swagger/go-swagger/strfmt"

	"github.com/tangr1/hicto/models"
)

type PutStarsIDReader struct {
	formats strfmt.Registry
}

func (o *PutStarsIDReader) ReadResponse(response client.Response, consumer httpkit.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPutStarsIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPutStarsIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPutStarsIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewPutStarsIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPutStarsIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewPutStarsIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutStarsIDOK creates a PutStarsIDOK with default headers values
func NewPutStarsIDOK() *PutStarsIDOK {
	return &PutStarsIDOK{}
}

/*PutStarsIDOK

成功更新明星
*/
type PutStarsIDOK struct {
	Payload *models.Star
}

func (o *PutStarsIDOK) Error() string {
	return fmt.Sprintf("[PUT /stars/{id}/][%d] putStarsIdOK  %+v", 200, o.Payload)
}

func (o *PutStarsIDOK) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Star)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil {
		return err
	}

	return nil
}

// NewPutStarsIDBadRequest creates a PutStarsIDBadRequest with default headers values
func NewPutStarsIDBadRequest() *PutStarsIDBadRequest {
	return &PutStarsIDBadRequest{}
}

/*PutStarsIDBadRequest

无效请求
*/
type PutStarsIDBadRequest struct {
	Payload *models.Error
}

func (o *PutStarsIDBadRequest) Error() string {
	return fmt.Sprintf("[PUT /stars/{id}/][%d] putStarsIdBadRequest  %+v", 400, o.Payload)
}

func (o *PutStarsIDBadRequest) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil {
		return err
	}

	return nil
}

// NewPutStarsIDUnauthorized creates a PutStarsIDUnauthorized with default headers values
func NewPutStarsIDUnauthorized() *PutStarsIDUnauthorized {
	return &PutStarsIDUnauthorized{}
}

/*PutStarsIDUnauthorized

未认证
*/
type PutStarsIDUnauthorized struct {
	Payload *models.Error
}

func (o *PutStarsIDUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /stars/{id}/][%d] putStarsIdUnauthorized  %+v", 401, o.Payload)
}

func (o *PutStarsIDUnauthorized) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil {
		return err
	}

	return nil
}

// NewPutStarsIDForbidden creates a PutStarsIDForbidden with default headers values
func NewPutStarsIDForbidden() *PutStarsIDForbidden {
	return &PutStarsIDForbidden{}
}

/*PutStarsIDForbidden

无访问权限
*/
type PutStarsIDForbidden struct {
	Payload *models.Error
}

func (o *PutStarsIDForbidden) Error() string {
	return fmt.Sprintf("[PUT /stars/{id}/][%d] putStarsIdForbidden  %+v", 403, o.Payload)
}

func (o *PutStarsIDForbidden) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil {
		return err
	}

	return nil
}

// NewPutStarsIDNotFound creates a PutStarsIDNotFound with default headers values
func NewPutStarsIDNotFound() *PutStarsIDNotFound {
	return &PutStarsIDNotFound{}
}

/*PutStarsIDNotFound

没找到指定对象
*/
type PutStarsIDNotFound struct {
	Payload *models.Error
}

func (o *PutStarsIDNotFound) Error() string {
	return fmt.Sprintf("[PUT /stars/{id}/][%d] putStarsIdNotFound  %+v", 404, o.Payload)
}

func (o *PutStarsIDNotFound) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil {
		return err
	}

	return nil
}

// NewPutStarsIDInternalServerError creates a PutStarsIDInternalServerError with default headers values
func NewPutStarsIDInternalServerError() *PutStarsIDInternalServerError {
	return &PutStarsIDInternalServerError{}
}

/*PutStarsIDInternalServerError

服务端内部错误
*/
type PutStarsIDInternalServerError struct {
	Payload *models.Error
}

func (o *PutStarsIDInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /stars/{id}/][%d] putStarsIdInternalServerError  %+v", 500, o.Payload)
}

func (o *PutStarsIDInternalServerError) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil {
		return err
	}

	return nil
}
