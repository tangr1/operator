package operation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-swagger/go-swagger/client"
	"github.com/go-swagger/go-swagger/httpkit"
	"github.com/go-swagger/go-swagger/strfmt"

	"github.com/tangr1/hicto/models"
)

type GetFeedbacksIDReader struct {
	formats strfmt.Registry
}

func (o *GetFeedbacksIDReader) ReadResponse(response client.Response, consumer httpkit.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetFeedbacksIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetFeedbacksIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetFeedbacksIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetFeedbacksIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetFeedbacksIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetFeedbacksIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetFeedbacksIDOK creates a GetFeedbacksIDOK with default headers values
func NewGetFeedbacksIDOK() *GetFeedbacksIDOK {
	return &GetFeedbacksIDOK{}
}

/*GetFeedbacksIDOK

成功查询反馈
*/
type GetFeedbacksIDOK struct {
	Payload *models.Feedback
}

func (o *GetFeedbacksIDOK) Error() string {
	return fmt.Sprintf("[GET /feedbacks/{id}/][%d] getFeedbacksIdOK  %+v", 200, o.Payload)
}

func (o *GetFeedbacksIDOK) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Feedback)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil {
		return err
	}

	return nil
}

// NewGetFeedbacksIDBadRequest creates a GetFeedbacksIDBadRequest with default headers values
func NewGetFeedbacksIDBadRequest() *GetFeedbacksIDBadRequest {
	return &GetFeedbacksIDBadRequest{}
}

/*GetFeedbacksIDBadRequest

无效请求
*/
type GetFeedbacksIDBadRequest struct {
	Payload *models.Error
}

func (o *GetFeedbacksIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /feedbacks/{id}/][%d] getFeedbacksIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetFeedbacksIDBadRequest) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil {
		return err
	}

	return nil
}

// NewGetFeedbacksIDUnauthorized creates a GetFeedbacksIDUnauthorized with default headers values
func NewGetFeedbacksIDUnauthorized() *GetFeedbacksIDUnauthorized {
	return &GetFeedbacksIDUnauthorized{}
}

/*GetFeedbacksIDUnauthorized

未认证
*/
type GetFeedbacksIDUnauthorized struct {
	Payload *models.Error
}

func (o *GetFeedbacksIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /feedbacks/{id}/][%d] getFeedbacksIdUnauthorized  %+v", 401, o.Payload)
}

func (o *GetFeedbacksIDUnauthorized) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil {
		return err
	}

	return nil
}

// NewGetFeedbacksIDForbidden creates a GetFeedbacksIDForbidden with default headers values
func NewGetFeedbacksIDForbidden() *GetFeedbacksIDForbidden {
	return &GetFeedbacksIDForbidden{}
}

/*GetFeedbacksIDForbidden

无访问权限
*/
type GetFeedbacksIDForbidden struct {
	Payload *models.Error
}

func (o *GetFeedbacksIDForbidden) Error() string {
	return fmt.Sprintf("[GET /feedbacks/{id}/][%d] getFeedbacksIdForbidden  %+v", 403, o.Payload)
}

func (o *GetFeedbacksIDForbidden) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil {
		return err
	}

	return nil
}

// NewGetFeedbacksIDNotFound creates a GetFeedbacksIDNotFound with default headers values
func NewGetFeedbacksIDNotFound() *GetFeedbacksIDNotFound {
	return &GetFeedbacksIDNotFound{}
}

/*GetFeedbacksIDNotFound

没找到指定对象
*/
type GetFeedbacksIDNotFound struct {
	Payload *models.Error
}

func (o *GetFeedbacksIDNotFound) Error() string {
	return fmt.Sprintf("[GET /feedbacks/{id}/][%d] getFeedbacksIdNotFound  %+v", 404, o.Payload)
}

func (o *GetFeedbacksIDNotFound) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil {
		return err
	}

	return nil
}

// NewGetFeedbacksIDInternalServerError creates a GetFeedbacksIDInternalServerError with default headers values
func NewGetFeedbacksIDInternalServerError() *GetFeedbacksIDInternalServerError {
	return &GetFeedbacksIDInternalServerError{}
}

/*GetFeedbacksIDInternalServerError

服务端内部错误
*/
type GetFeedbacksIDInternalServerError struct {
	Payload *models.Error
}

func (o *GetFeedbacksIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /feedbacks/{id}/][%d] getFeedbacksIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetFeedbacksIDInternalServerError) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil {
		return err
	}

	return nil
}
