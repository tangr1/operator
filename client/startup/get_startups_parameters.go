package startup

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-swagger/go-swagger/client"
	"github.com/go-swagger/go-swagger/errors"
	"github.com/go-swagger/go-swagger/strfmt"
	"github.com/go-swagger/go-swagger/swag"
)

// NewGetStartupsParams creates a new GetStartupsParams object
// with the default values initialized.
func NewGetStartupsParams() *GetStartupsParams {
	return &GetStartupsParams{}
}

/*GetStartupsParams contains all the parameters to send to the API endpoint
for the get startups operation typically these are written to a http.Request
*/
type GetStartupsParams struct {

	/*Page
	  当前页码

	*/
	Page int64
	/*Pagesize
	  每页项数

	*/
	Pagesize int64
	/*Reviewstatus
	  审核状态

	*/
	Reviewstatus int64
}

// WithPage adds the page to the get startups params
func (o *GetStartupsParams) WithPage(page int64) *GetStartupsParams {
	o.Page = page
	return o
}

// WithPagesize adds the pagesize to the get startups params
func (o *GetStartupsParams) WithPagesize(pagesize int64) *GetStartupsParams {
	o.Pagesize = pagesize
	return o
}

// WithReviewstatus adds the reviewstatus to the get startups params
func (o *GetStartupsParams) WithReviewstatus(reviewstatus int64) *GetStartupsParams {
	o.Reviewstatus = reviewstatus
	return o
}

// WriteToRequest writes these params to a swagger request
func (o *GetStartupsParams) WriteToRequest(r client.Request, reg strfmt.Registry) error {

	var res []error

	// query param page
	qrPage := o.Page
	qPage := swag.FormatInt64(qrPage)
	if qPage != "" && qPage != "-1" {
		if err := r.SetQueryParam("page", qPage); err != nil {
			return err
		}
	}

	// query array param page

	// query param pagesize
	qrPagesize := o.Pagesize
	qPagesize := swag.FormatInt64(qrPagesize)
	if qPagesize != "" && qPagesize != "-1" {
		if err := r.SetQueryParam("pagesize", qPagesize); err != nil {
			return err
		}
	}

	// query array param pagesize

	// query param reviewstatus
	qrReviewstatus := o.Reviewstatus
	qReviewstatus := swag.FormatInt64(qrReviewstatus)
	if qReviewstatus != "" && qReviewstatus != "-1" {
		if err := r.SetQueryParam("reviewstatus", qReviewstatus); err != nil {
			return err
		}
	}

	// query array param reviewstatus

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
