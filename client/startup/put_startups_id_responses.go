package startup

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-swagger/go-swagger/client"
	"github.com/go-swagger/go-swagger/httpkit"
	"github.com/go-swagger/go-swagger/strfmt"

	"github.com/tangr1/hicto/models"
)

type PutStartupsIDReader struct {
	formats strfmt.Registry
}

func (o *PutStartupsIDReader) ReadResponse(response client.Response, consumer httpkit.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPutStartupsIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPutStartupsIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPutStartupsIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewPutStartupsIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPutStartupsIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewPutStartupsIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutStartupsIDOK creates a PutStartupsIDOK with default headers values
func NewPutStartupsIDOK() *PutStartupsIDOK {
	return &PutStartupsIDOK{}
}

/*PutStartupsIDOK

成功更新创业公司
*/
type PutStartupsIDOK struct {
	Payload *models.Startup
}

func (o *PutStartupsIDOK) Error() string {
	return fmt.Sprintf("[PUT /startups/{id}/][%d] putStartupsIdOK  %+v", 200, o.Payload)
}

func (o *PutStartupsIDOK) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Startup)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil {
		return err
	}

	return nil
}

// NewPutStartupsIDBadRequest creates a PutStartupsIDBadRequest with default headers values
func NewPutStartupsIDBadRequest() *PutStartupsIDBadRequest {
	return &PutStartupsIDBadRequest{}
}

/*PutStartupsIDBadRequest

无效请求
*/
type PutStartupsIDBadRequest struct {
	Payload *models.Error
}

func (o *PutStartupsIDBadRequest) Error() string {
	return fmt.Sprintf("[PUT /startups/{id}/][%d] putStartupsIdBadRequest  %+v", 400, o.Payload)
}

func (o *PutStartupsIDBadRequest) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil {
		return err
	}

	return nil
}

// NewPutStartupsIDUnauthorized creates a PutStartupsIDUnauthorized with default headers values
func NewPutStartupsIDUnauthorized() *PutStartupsIDUnauthorized {
	return &PutStartupsIDUnauthorized{}
}

/*PutStartupsIDUnauthorized

未认证
*/
type PutStartupsIDUnauthorized struct {
	Payload *models.Error
}

func (o *PutStartupsIDUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /startups/{id}/][%d] putStartupsIdUnauthorized  %+v", 401, o.Payload)
}

func (o *PutStartupsIDUnauthorized) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil {
		return err
	}

	return nil
}

// NewPutStartupsIDForbidden creates a PutStartupsIDForbidden with default headers values
func NewPutStartupsIDForbidden() *PutStartupsIDForbidden {
	return &PutStartupsIDForbidden{}
}

/*PutStartupsIDForbidden

无访问权限
*/
type PutStartupsIDForbidden struct {
	Payload *models.Error
}

func (o *PutStartupsIDForbidden) Error() string {
	return fmt.Sprintf("[PUT /startups/{id}/][%d] putStartupsIdForbidden  %+v", 403, o.Payload)
}

func (o *PutStartupsIDForbidden) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil {
		return err
	}

	return nil
}

// NewPutStartupsIDNotFound creates a PutStartupsIDNotFound with default headers values
func NewPutStartupsIDNotFound() *PutStartupsIDNotFound {
	return &PutStartupsIDNotFound{}
}

/*PutStartupsIDNotFound

没找到指定对象
*/
type PutStartupsIDNotFound struct {
	Payload *models.Error
}

func (o *PutStartupsIDNotFound) Error() string {
	return fmt.Sprintf("[PUT /startups/{id}/][%d] putStartupsIdNotFound  %+v", 404, o.Payload)
}

func (o *PutStartupsIDNotFound) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil {
		return err
	}

	return nil
}

// NewPutStartupsIDInternalServerError creates a PutStartupsIDInternalServerError with default headers values
func NewPutStartupsIDInternalServerError() *PutStartupsIDInternalServerError {
	return &PutStartupsIDInternalServerError{}
}

/*PutStartupsIDInternalServerError

服务端内部错误
*/
type PutStartupsIDInternalServerError struct {
	Payload *models.Error
}

func (o *PutStartupsIDInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /startups/{id}/][%d] putStartupsIdInternalServerError  %+v", 500, o.Payload)
}

func (o *PutStartupsIDInternalServerError) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil {
		return err
	}

	return nil
}
