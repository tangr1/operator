package models

import (
	"github.com/go-swagger/go-swagger/errors"
	"github.com/go-swagger/go-swagger/strfmt"
)

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

/*表示创业公司员工资源

swagger:model Employee
*/
type Employee struct {
	User

	/* 是否为管理员
	 */
	Admin bool `json:"admin,omitempty"`

	/* 消费ctocoins总数
	 */
	ConsumeCtoCoins int32 `json:"consumeCtoCoins,omitempty"`

	/* 评论有评论时邮件通知
	 */
	NotifyCommentNewCommentByEmail bool `json:"notifyCommentNewCommentByEmail,omitempty"`

	/* 评论有评论时推送通知
	 */
	NotifyCommentNewCommentByPush bool `json:"notifyCommentNewCommentByPush,omitempty"`

	/* 主题有回复时邮件通知
	 */
	NotifyNewReplyByEmail bool `json:"notifyNewReplyByEmail,omitempty"`

	/* 主题有回复时推送通知
	 */
	NotifyNewReplyByPush bool `json:"notifyNewReplyByPush,omitempty"`

	/* 只当我的主题有响应时通知
	 */
	NotifyOnlyMyTopic bool `json:"notifyOnlyMyTopic,omitempty"`

	/* 主题有评论时邮件通知
	 */
	NotifyTopicNewCommentByEmail bool `json:"notifyTopicNewCommentByEmail,omitempty"`

	/* 主题有评论时推送通知
	 */
	NotifyTopicNewCommentByPush bool `json:"notifyTopicNewCommentByPush,omitempty"`

	/* 职位
	 */
	Position string `json:"position,omitempty"`

	/* 发过主题总数
	 */
	TopicCount int32 `json:"topicCount,omitempty"`
}

// Validate validates this employee
func (m *Employee) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.User.Validate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
