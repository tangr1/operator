package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	"github.com/go-swagger/go-swagger/errors"
	"github.com/go-swagger/go-swagger/httpkit/validate"
	"github.com/go-swagger/go-swagger/strfmt"
	"github.com/go-swagger/go-swagger/swag"
)

/*表示创建明星资源

swagger:model CreateStarRequest
*/
type CreateStarRequest struct {

	/* 日期

	Pattern: ^(19|20)\\d\\d[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$
	*/
	Date string `json:"date,omitempty"`

	/* 明星专家
	 */
	Experts []int64 `json:"experts,omitempty"`

	/* 明星企业
	 */
	Startups []int64 `json:"startups,omitempty"`
}

// Validate validates this create star request
func (m *CreateStarRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDate(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateExperts(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateStartups(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CreateStarRequest) validateDate(formats strfmt.Registry) error {

	if swag.IsZero(m.Date) { // not required
		return nil
	}

	if err := validate.Pattern("date", "body", string(m.Date), `^(19|20)\\d\\d[- /.](0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$`); err != nil {
		return err
	}

	return nil
}

func (m *CreateStarRequest) validateExperts(formats strfmt.Registry) error {

	if swag.IsZero(m.Experts) { // not required
		return nil
	}

	for i := 0; i < len(m.Experts); i++ {

		if err := validate.Required("experts"+"."+strconv.Itoa(i), "body", int64(m.Experts[i])); err != nil {
			return err
		}

	}

	return nil
}

func (m *CreateStarRequest) validateStartups(formats strfmt.Registry) error {

	if swag.IsZero(m.Startups) { // not required
		return nil
	}

	for i := 0; i < len(m.Startups); i++ {

		if err := validate.Required("startups"+"."+strconv.Itoa(i), "body", int64(m.Startups[i])); err != nil {
			return err
		}

	}

	return nil
}
