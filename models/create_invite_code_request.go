package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-swagger/go-swagger/errors"
	"github.com/go-swagger/go-swagger/httpkit/validate"
	"github.com/go-swagger/go-swagger/strfmt"
	"github.com/go-swagger/go-swagger/swag"
)

/*表示创建邀请码请求

swagger:model CreateInviteCodeRequest
*/
type CreateInviteCodeRequest struct {

	/* 可用次数, 默认为1

	Minimum: 1
	*/
	Quota int32 `json:"quota,omitempty"`

	/* 已使用次数

	Minimum: 0
	*/
	Used int32 `json:"used,omitempty"`
}

// Validate validates this create invite code request
func (m *CreateInviteCodeRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateQuota(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateUsed(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CreateInviteCodeRequest) validateQuota(formats strfmt.Registry) error {

	if swag.IsZero(m.Quota) { // not required
		return nil
	}

	if err := validate.Minimum("quota", "body", float64(m.Quota), 1, false); err != nil {
		return err
	}

	return nil
}

func (m *CreateInviteCodeRequest) validateUsed(formats strfmt.Registry) error {

	if swag.IsZero(m.Used) { // not required
		return nil
	}

	if err := validate.Minimum("used", "body", float64(m.Used), 0, false); err != nil {
		return err
	}

	return nil
}
